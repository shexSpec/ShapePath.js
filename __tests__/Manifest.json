[
  {
    "title": "@<S1>.<p2>->[X]",
    "desc": "shortcut @shape.predicate",
    "shexTest": "#1dotShapeAND1dot3X_pass",
    "shapePath": "@<http://a.example/S1>.<http://a.example/p2>",
    "shapePathSchemaMatch": [{
      "type": "TripleConstraint",
      "predicate": "http://a.example/p2"
    }],
    "shapePathDataMatch": [{ "value": "X" }],
    "status": "unapproved"
  },{
    "title": "compile(@<S1>.<p2>)->[X]",
    "desc": "expanded @shape.predicate",
    "shexTest": "#1dotShapeAND1dot3X_pass",
    "shapePath": "/shapes/*[id=<http://a.example/S1>][assert count() = 1]/thisShapeExpr::Shape/expression/thisTripleExpr::TripleConstraint[predicate=<http://a.example/p2>]",
    "shapePathSchemaMatch": [{
      "type": "TripleConstraint",
      "predicate": "http://a.example/p2"
    }],
    "shapePathDataMatch": [{ "value": "X" }],
    "status": "unapproved"
  },{
    "title": "child-axis",
    "desc": "expanded @shape.predicate using child:: axis",
    "shexTest": "#1dotShapeAND1dot3X_pass",
    "shapePath": "/child::*/*[id=<http://a.example/S1>][assert count() = 1]/thisShapeExpr::Shape/child::expression/thisTripleExpr::TripleConstraint[predicate=<http://a.example/p2>]",
    "shapePathSchemaMatch": [{
      "type": "TripleConstraint",
      "predicate": "http://a.example/p2"
    }],
    "shapePathDataMatch": [{ "value": "X" }],
    "status": "unapproved"
  },{
    "title": "self-axis",
    "desc": "expanded @shape.predicate using self:: axis",
    "shexTest": "#1dotShapeAND1dot3X_pass",
    "shapePath": "/self::/shapes/*/self::[id=<http://a.example/S1>][assert count() = 1]/thisShapeExpr::Shape/child::expression/thisTripleExpr::TripleConstraint[predicate=<http://a.example/p2>]",
    "shapePathSchemaMatch": [{
      "type": "TripleConstraint",
      "predicate": "http://a.example/p2"
    }],
    "shapePathDataMatch": [{ "value": "X" }],
    "status": "unapproved"
  },
  {
    "title": "@<S1>.<p3>UNION@<S1>.<p2>->[X,X]",
    "desc": "union of different results",
    "shexTest": "#1dotShapeAND1dot3X_pass",
    "shapePath": "@<http://a.example/S1>.<http://a.example/p3> union @<http://a.example/S1>.<http://a.example/p2>",
    "shapePathSchemaMatch": [{
      "type": "TripleConstraint",
      "predicate": "http://a.example/p3"
    },{
      "type": "TripleConstraint",
      "predicate": "http://a.example/p2"
    }],
    "shapePathDataMatch": [{ "value": "X" },{ "value": "X" }],
    "status": "unapproved"
  },
  {
    "title": "@<S1>.<p2>UNION@<S1>.<p2>->[X]",
    "desc": "union of identical results",
    "shexTest": "#1dotShapeAND1dot3X_pass",
    "shapePath": "@<http://a.example/S1>.<http://a.example/p2> union @<http://a.example/S1>.<http://a.example/p2>",
    "shapePathSchemaMatch": [{
      "type": "TripleConstraint",
      "predicate": "http://a.example/p2"
    }],
    "shapePathDataMatch": [{ "value": "X" }],
    "status": "unapproved"
  },
  {
    "title": "@<S1>.<p2>,@<S1>.<p2>->[X,X]",
    "desc": "sequence of identical results",
    "shexTest": "#1dotShapeAND1dot3X_pass",
    "shapePath": "@<http://a.example/S1>.<http://a.example/p2>, @<http://a.example/S1>.<http://a.example/p2>",
    "shapePathSchemaMatch": [{
      "type": "TripleConstraint",
      "predicate": "http://a.example/p2"
    },{
      "type": "TripleConstraint",
      "predicate": "http://a.example/p2"
    }],
    "shapePathDataMatch": [{ "value": "X" }, { "value": "X" }],
    "status": "unapproved"
  }
]
